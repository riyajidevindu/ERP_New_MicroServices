@using MudBlazor
@using ERP_GraduateManagement.DTOs.Response
@using System.Net.Http.Json


<MudPaper Class="pa-4">
    <div class="d-flex align-items-center">
        <MudText Typo="Typo.h6" Class="mb-0">Alumni Member Specilization</MudText>
    </div>
    <MudChart ChartType="ChartType.Donut" Width="300px" Height="300px" InputData="@data" InputLabels="@labels">
        <CustomGraphics>
            <text class="donut-inner-text" x="50%" y="40%" 
                dominant-baseline="middle" text-anchor="middle" 
                fill="black" font-family="Helvetica" font-size="2">Total Alumni Members</text>
            <text class="donut-inner-text" x="50%" y="55%" 
                dominant-baseline="middle" text-anchor="middle" 
                fill="black" font-family="Helvetica" font-size="5">@totalCount.ToString()</text>
        </CustomGraphics>
    </MudChart>
</MudPaper>





@code {
    int dataSize = 2;
    double[] data;
    string[] labels;
    int totalCount;

    private HttpClient Http = new HttpClient();
    private List<GetGraduateResponse> _graduates = new List<GetGraduateResponse>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _graduates = await Http.GetFromJsonAsync<List<GetGraduateResponse>>("https://localhost:7010/api/Graduates/Get");

            var distinctDegreeCounts = _graduates
                .GroupBy(g => g.Degree)  
                .Select(g => new
                {
                    Degree = g.Key,      
                    Count = g.Count()    
                });

            List<string> degrees = distinctDegreeCounts.Select(d => d.Degree).ToList();
            List<int> counts = distinctDegreeCounts.Select(d => d.Count).ToList();

            data = counts.Select(x => (double)x).ToArray();
            labels = degrees.Select(x => (string)x).ToArray();
            totalCount = counts.Sum();
        }
        catch (Exception ex)
        {
            _graduates = null;
        }
    }
}