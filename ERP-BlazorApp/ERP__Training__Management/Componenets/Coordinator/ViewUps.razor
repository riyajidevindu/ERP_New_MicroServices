@using System.Net.Http.Json
@using MudBlazor
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudPaper>
    <MudText Typo="Typo.h6">Uploaded CVs</MudText>
    <MudDivider Class="my-4" />

    @if (_cvUploads == null)
    {
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
    }
    else if (!_cvUploads.Any())
    {
        <MudText Typo="Typo.body1">No CVs available.</MudText>
    }
    else
    {
        <MudTable Items="_cvUploads">
            <HeaderContent>
                <MudTh>Name</MudTh>

                <MudTh>Actions</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Id">@context.FirstName</MudTd>


                @* <MudTd DataLabel="Actions">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => DownloadCV(context.Id))">Download</MudButton>
            </MudTd> *@
            </RowTemplate>
        </MudTable>
    }
</MudPaper>

@code {
    [Parameter]
    public Guid VacancyId { get; set; }

    private List<CVUpload> _cvUploads;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _cvUploads = await Http.GetFromJsonAsync<List<CVUpload>>($"https://localhost:7270/api/File/vacancy/{VacancyId}");
        }
        catch (Exception ex)
        {
            Snackbar.Add("Failed to load CV uploads.", Severity.Error);
        }
    }

    // private void DownloadCV(Guid cvId)
    // {
    //     NavigationManager.NavigateTo($"https://localhost:7270/api/InternshipVacancy/download/{cvId}");
    // }

    public class CVUpload
    {
        public Guid Id { get; set; }
        public string FirstName { get; set; }
        public string fileName { get; set; }

    }
}
