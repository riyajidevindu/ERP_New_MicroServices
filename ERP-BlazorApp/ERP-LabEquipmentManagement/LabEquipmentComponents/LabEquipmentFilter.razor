@using ERP_LabEquipmentManagement.DTOs.Response
@using System.Net.Http.Json
@using MudBlazor

<TitleContent>
		<MudText Typo="Typo.h6">
			<MudIcon Icon="@Icons.Material.Filled.Search" Class="mr-3 mb-n1" />
			Filter Lab Equipment
		</MudText>
	</TitleContent>
@if (_labEquipment.Count > 0)
{

    <MudDataGrid Items="_labEquipment" Filterable="true" Bordered="true" Dense="true">
        <Columns>
            <PropertyColumn Property="x => x.EquipmentRegisterId" Title="Register ID" />
            <PropertyColumn Property="x => x.EquipmentName" Title="Lab Equipment Name" />
            <PropertyColumn Property="x => x.SelectCategory" Title="Selected Category" />
            <PropertyColumn Property="x => x.IsActive" Title="Availability of Lab Equipment" />
            <PropertyColumn Property="x => x.Location" Title="Location" />
            <PropertyColumn Property="x => x.Price" Title="Price" />
            <PropertyColumn Property="x => x.PurchasedDate" Title="Purchased Date" Format="yyyy-MM-dd" />
              
            <PropertyColumn Property="x => x.Description" Title="Description" />
        </Columns>

        <PagerContent>
            <MudDataGridPager />
        </PagerContent>
    </MudDataGrid>

    <div style="margin-top: 20px;">

        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Generate Report</MudButton>
    </div>
}
else
{
    <p>No Lab Equipments to Show</p>
}


@code {

    private HttpClient Http = new HttpClient();

    private List<GetLabEquipmentResponse> _labEquipment = new List<GetLabEquipmentResponse>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            _labEquipment = await Http.GetFromJsonAsync<List<GetLabEquipmentResponse>>("https://localhost:7011/api/LabEquipment/Get");
        }
        catch (Exception ex)
        {
            _labEquipment = null;
        }
    }

}

