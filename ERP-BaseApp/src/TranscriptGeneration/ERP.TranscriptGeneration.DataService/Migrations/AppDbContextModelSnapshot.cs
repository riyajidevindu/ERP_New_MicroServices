// <auto-generated />
using System;
using ERP.TranscriptGeneration.DataService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP.TranscriptGeneration.DataService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("ERP.TranscriptGenetation.Core.Entity.Result", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("Credits")
                        .HasColumnType("REAL");

                    b.Property<double>("GPV")
                        .HasColumnType("REAL");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Results");

                    b.HasData(
                        new
                        {
                            Id = new Guid("336fd8ad-5e16-4186-860d-454cef6c54a0"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1309),
                            Credits = 1.0,
                            GPV = 3.7000000000000002,
                            Grade = "A-",
                            ModuleCode = "EE1101",
                            ModuleName = "Intoduction to Algorithms",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1310)
                        },
                        new
                        {
                            Id = new Guid("1e4046a9-eb1e-41bf-9c90-2c23c97ba6e8"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1323),
                            Credits = 2.0,
                            GPV = 2.2999999999999998,
                            Grade = "C+",
                            ModuleCode = "EE1102",
                            ModuleName = "Intoduction to Electronics",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1323)
                        },
                        new
                        {
                            Id = new Guid("553f3a3f-5a3f-425c-9fff-bf32fa2657e3"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1326),
                            Credits = 2.0,
                            GPV = 3.0,
                            Grade = "B",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1326)
                        },
                        new
                        {
                            Id = new Guid("94025d0e-5b58-439b-946c-b4dd2fa97672"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1328),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1328)
                        },
                        new
                        {
                            Id = new Guid("a9c2d7e1-9e05-4e62-9045-524eb81df124"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1330),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1330)
                        },
                        new
                        {
                            Id = new Guid("a1e47f7c-5d70-43a3-b033-7e4e1a8c3c25"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1334),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1334)
                        },
                        new
                        {
                            Id = new Guid("fb8b101d-d636-4d8c-9047-d82464ae99ae"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1347),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1348)
                        },
                        new
                        {
                            Id = new Guid("b9184b61-65a5-44ac-afaa-6283ff4f2457"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1349),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1349)
                        },
                        new
                        {
                            Id = new Guid("8a0c09fe-6cc9-4b20-8ba9-bb4c102ebd57"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1350),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1350)
                        },
                        new
                        {
                            Id = new Guid("5b463de4-3571-4b2a-a5c2-ce63e93ba1ba"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1352),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1352)
                        },
                        new
                        {
                            Id = new Guid("52a9c923-2c90-45e2-a541-f29d65baa01d"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1353),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1353)
                        },
                        new
                        {
                            Id = new Guid("2dda597e-649c-4be1-8d11-a010f423858b"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1355),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1355)
                        },
                        new
                        {
                            Id = new Guid("4b5e5553-f50c-4320-b0c5-64cb92692029"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1401),
                            Credits = 2.0,
                            GPV = 4.0,
                            Grade = "A+",
                            ModuleCode = "EE1302",
                            ModuleName = "Electricity",
                            Semester = "semestr 1",
                            Status = 1,
                            StudentId = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            Type = "CM",
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 745, DateTimeKind.Utc).AddTicks(1401)
                        });
                });

            modelBuilder.Entity("ERP.TranscriptGenetation.Core.Entity.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AcademicStading")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("DegreeAwarded")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GPA")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0fd1f61-c846-4453-8b68-71d7022f0dc2"),
                            AddedDate = new DateTime(2024, 3, 10, 1, 46, 21, 744, DateTimeKind.Utc).AddTicks(8247),
                            DateOfBirth = new DateTime(2024, 3, 10, 7, 16, 21, 744, DateTimeKind.Local).AddTicks(8642),
                            FullName = "Gregory Hane",
                            Gender = "Male",
                            RegNo = "EG/2020/4809",
                            Status = 1,
                            UpdateDate = new DateTime(2024, 3, 10, 1, 46, 21, 744, DateTimeKind.Utc).AddTicks(8249)
                        });
                });

            modelBuilder.Entity("ERP.TranscriptGenetation.Core.Entity.Result", b =>
                {
                    b.HasOne("ERP.TranscriptGenetation.Core.Entity.Student", "Student")
                        .WithMany("Results")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ERP.TranscriptGenetation.Core.Entity.Student", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
